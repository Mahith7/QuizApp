#name: SonarQube PR Analysis
#
#on:
#  push:
#    branches:
#      - main
#      - testtt
#  pull_request:
#    types: [opened, synchronize, reopened]
#
#jobs:
#  sonar-pr:
#    runs-on: ubuntu-latest
#    steps:
#      # 1. Checkout the PR’s code
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0         # needed to see full history for diff
#
#      # 2. Set up Java 17
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: 17
#
#      # 3. Download & install SonarScanner CLI
#      - name: Install SonarScanner
#        run: |
#          SCANNER_ZIP="sonar-scanner-cli.zip"
#          curl -sSL -o "$SCANNER_ZIP" \
#            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.9.0.3756-linux.zip
#          unzip -q "$SCANNER_ZIP" -d scanner
#          echo "${{ github.workspace }}/scanner/sonar-scanner-*/bin" >> $GITHUB_PATH
#
#      # 4. Run SonarQube analysis in PR mode, waiting for gate
#      - name: SonarQube Analysis
#        env:
#          SONAR_HOST_URL: https://sonarcloud.io
#          SONAR_TOKEN: c6fd71374de8ede7f1d2829dbf668e9d30a53bfd
#        run: |
#          sonar-scanner \
#            -Dsonar.projectKey=Mahith7_QuizApp \
#            -Dsonar.projectName="${{ github.repository }}" \
#            -Dsonar.sources=. \
#            -Dsonar.host.url=${SONAR_HOST_URL} \
#            -Dsonar.login=${SONAR_TOKEN} \
#            # PR-specific parameters
#            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
#            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
#            -Dsonar.pullrequest.base=${{ github.base_ref }} \
#            # wait for Quality Gate status (requires Developer Edition+)
#            -Dsonar.qualitygate.wait=true \
#            -Dsonar.qualitygate.timeout=300
#
#      # 5a. (Optional fallback for Community Edition)
#      # If you’re on CE, the scanner won’t fail on gate; you can poll the API yourself:
#      - name: Install jq
#        run: sudo apt-get update && sudo apt-get install -y jq
#
#      - name: Enforce Quality Gate (fallback)
#        if: always()  # runs even if the previous step “succeeds” in CE
#        env:
#          SONAR_HOST_URL: https://sonarcloud.io
#          SONAR_TOKEN: c6fd71374de8ede7f1d2829dbf668e9d30a53bfd
#          PROJECT_KEY: Mahith7_QuizApp
#        run: |
#          STATUS=$(
#            curl -s -u "${SONAR_TOKEN}:" \
#              "${SONAR_HOST_URL}/api/qualitygates/project_status?projectKey=${PROJECT_KEY}" \
#              | jq -r .projectStatus.status
#          )
#          echo "Quality Gate status: $STATUS"
#          if [ "$STATUS" != "OK" ]; then
#            echo "Quality Gate failed"
#            exit 1
#          fi


name: SonarCloud Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ main, testtt ]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: c6fd71374de8ede7f1d2829dbf668e9d30a53bfd

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .              # if your code lives in the repo root
          args: >
            -Dsonar.organization=mahith7
            -Dsonar.projectKey=mahith7_quizapp
            -Dsonar.sources=.
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
