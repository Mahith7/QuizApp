name: SonarQube PR Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonar-pr:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the PR’s code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0         # needed to see full history for diff

      # 2. Set up Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # 3. Download & install SonarScanner CLI
      - name: Install SonarScanner
        run: |
          SCANNER_ZIP="sonar-scanner-cli.zip"
          curl -sSL -o "$SCANNER_ZIP" \
            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.9.0.3756-linux.zip
          unzip -q "$SCANNER_ZIP" -d scanner
          echo "::add-path::${{ github.workspace }}/scanner/sonar-scanner-*/bin"

      # 4. Run SonarQube analysis in PR mode, waiting for gate
      - name: SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ github.repository }} \
            -Dsonar.projectName="${{ github.repository }}" \
            -Dsonar.sources=. \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN} \
            # PR-specific parameters
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            # wait for Quality Gate status (requires Developer Edition+)
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300

      # 5a. (Optional fallback for Community Edition)
      # If you’re on CE, the scanner won’t fail on gate; you can poll the API yourself:
      - name: Enforce Quality Gate (fallback)
        if: always()  # runs even if the previous step “succeeds” in CE
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
          PROJECT_KEY:    ${{ github.repository }}
        run: |
          STATUS=$(
            curl -s -u "${SONAR_TOKEN}:" \
              "${SONAR_HOST_URL}/api/qualitygates/project_status?projectKey=${PROJECT_KEY}" \
              | jq -r .projectStatus.status
          )
          echo "Quality Gate status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "Quality Gate failed"
            exit 1
          fi
